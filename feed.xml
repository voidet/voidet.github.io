<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<title>manageering.</title>
		<description>{&quot;meta&quot;=&gt;&quot;An Engineering Manager in San Francisco. Has Thoughts. Has typed these thoughts&quot;, &quot;subtitle&quot;=&gt;&quot;Thoughts from an Engineering Manager&quot;}</description>
		<link>http://manageering.us</link>
		<atom:link href="http://manageering.us/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Value &amp; Reference Types</title>
				
					
						<dc:creator>RS</dc:creator>
					
				
				
					<description>&lt;p&gt;Value and references types are different ways in which data gets handled as it flows through your application. They both have implications on perfomance &amp;amp; architecture. Both introduce complexities of which mishandled can introduce some unexpected behaviours in your applications performance, meaning, bugs.&lt;/p&gt;
</description>
				
				<pubDate>Sat, 04 Nov 2017 00:00:00 -0700</pubDate>
				<link>http://manageering.us/2017/11/04/value-and-reference-types/</link>
				<guid isPermaLink="true">http://manageering.us/2017/11/04/value-and-reference-types/</guid>
			</item>
		
			<item>
				<title>MVVM for EMs</title>
				
					
						<dc:creator>RS</dc:creator>
					
				
				
					<description>&lt;p&gt;Firstly let’s get the acronym out of the way. MVVM stands for model, view, view-model. It has a nice symmetry, but there are three components here and they all have separate responsibilities. The main purpose of MVVM is to keep business logic in a single place; the view model. All dependencies that are required to show something on the screen, to calculate something, all fall under the jurisdiction of the view-model. Let’s take a look at the responsibilities of each of the three components.&lt;/p&gt;

&lt;h2 id=&quot;model&quot;&gt;Model&lt;/h2&gt;

&lt;p&gt;This is the first &lt;strong&gt;M&lt;/strong&gt; of &lt;strong&gt;MVVM&lt;/strong&gt;. The model’s sole task, and it is a basic one, is simply to store data. There is no logic in the &lt;strong&gt;model&lt;/strong&gt;, no network calls. Simply a bunch of properties and potentially some handling of data to get these properties filled. For instance you may place some JSON parsing in the &lt;strong&gt;model&lt;/strong&gt; object, but no transformation will be done outside the realm of mapping.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;totalPrice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;30.99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;currencySymbol&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;$&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;currencyCode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;USD&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;view&quot;&gt;View&lt;/h2&gt;

&lt;p&gt;The next component is the view, the next &lt;strong&gt;V&lt;/strong&gt; in the &lt;strong&gt;MVVM&lt;/strong&gt; acronym. This is simple. It’s the stuff you see on screen, or whatever the client will consume. In the case of of a mobile app, the view may be a button, a label, or even an entire login screen. For an API the &lt;strong&gt;V&lt;/strong&gt; may be the JSON that gets sent out to the client.&lt;/p&gt;

&lt;p&gt;There is no logic in the &lt;strong&gt;view&lt;/strong&gt;. The &lt;strong&gt;view&lt;/strong&gt; simply read values, or, in some cases, reacts to values, that get passed in. By the:&lt;/p&gt;

&lt;h2 id=&quot;view-model&quot;&gt;View model&lt;/h2&gt;

&lt;p&gt;I left this for last, but it is the &lt;strong&gt;VM&lt;/strong&gt; in &lt;strong&gt;MVVM&lt;/strong&gt;. This is where the meat and bones are. This is where all the logic, all the handling, all the updates, all the treatment gets done. The view model is the middleman between the view and the model. It’s job is to take ownership of all the business logic, view logic, server call logic. A &lt;strong&gt;view&lt;/strong&gt; model takes in &lt;strong&gt;model&lt;/strong&gt; objects, or other &lt;strong&gt;view models&lt;/strong&gt;, and composes itself in a way that will set itself up to give a &lt;strong&gt;view&lt;/strong&gt; what it needs. It will hand the &lt;strong&gt;view&lt;/strong&gt; direct, hopefully, flat mapped properties for the &lt;strong&gt;view&lt;/strong&gt; to read.&lt;/p&gt;

&lt;p&gt;So what does it look like?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/mvvm.png&quot; alt=&quot;mvvm&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;real-world-example&quot;&gt;Real world example&lt;/h2&gt;

&lt;p&gt;Let’s take a real world example. Let’s say we want to present the user a total price for their holiday. This will involve:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A network call&lt;/li&gt;
  &lt;li&gt;A place to store the total cost amount&lt;/li&gt;
  &lt;li&gt;Some beautification of the total cost amount&lt;/li&gt;
  &lt;li&gt;A view to present the user the total amount&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We’ll now break it down using some swift to showcase how this all looks then talk about the lifecycle.&lt;/p&gt;

&lt;h3 id=&quot;the-model&quot;&gt;The model&lt;/h3&gt;

&lt;p&gt;You can ignore the init method in the example below. This is just an example that parsing and mapping concerns can lay with the model object. The example parses in a JSON object and stores the &lt;em&gt;totalPrice&lt;/em&gt; from that object, storing it into price on TripPrice. This is not a view concern, logic or formatting outside of marshaling data presented from the server into the model object. Really, if you’re doing your API layer correctly for a client &amp;lt;-&amp;gt; server relationship, this really should be flat mapped and one to one easily parsed.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TripPrice&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Double&lt;/span&gt;

  &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;jsonResult&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jsonResult&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;totalPrice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;the-view&quot;&gt;The view&lt;/h3&gt;

&lt;p&gt;Here you can see we need to initialize our PriceLabel object with a &lt;strong&gt;TripPriceViewModel&lt;/strong&gt;. When we do we call the internal method of updateView, which will read the property totalPriceText and set it on the text. Long story short, make a new label and give it a view model, it will automatically update that label’s text with the totalPriceText from that view model.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;PriceLabel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UILabel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;viewModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TripPriceViewModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;viewModel&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;updateView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;updateView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;viewModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;totalPriceText&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The main thing to pay attention to here is the setting of the viewModel, and the &lt;em&gt;updateView&lt;/em&gt; method and what that does.&lt;/p&gt;

&lt;h3 id=&quot;the-view-model&quot;&gt;The view model&lt;/h3&gt;

&lt;p&gt;The view model now does all the logic for us&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TripPriceViewModel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tripPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TripPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;totalPriceText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tripPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Fetching total price&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;The total trip price is &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tripPriceText&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;tripPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TripPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tripPrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tripPrice&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fetchResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;completion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//Fetch some JSON and return it&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tripPrice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TripPrice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;completion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;stitching-it-all-together&quot;&gt;Stitching it all together&lt;/h3&gt;

&lt;p&gt;So what does this all mean? Let’s talk about how this all would play in together. Part of our view layer would also be a View Controller. A view controller is quite standard and you would be familiar with it in the MVC world. It’s part of the view lifecycle for a Mobile App, a presenter, a VC.&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TripPriceViewController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIViewController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tripPriceViewModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TripPriceViewModel&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;totalPriceLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;PriceLabel&lt;/span&gt;

  &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TripPriceViewModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tripPriceViewModel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;totalPriceLabel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;PriceLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;viewModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;viewDidLoad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addSubview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;totalPriceLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;tripPriceViewModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fetchResults&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;success&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;success&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tripPriceViewModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;updateView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can see that we get passed in a view model from whoever instantiated (created) the view controller. This is useful to pass in data that the screen requires that the previous screen may of had and needs to pass along. We also setup our view and add it on screen when the view hierarchy is finished loading.&lt;/p&gt;

&lt;p&gt;Next we fetch some tripPrices, if it succeeded then we will call updateView(). Which simply looks at the viewModel’s contents back in the ViewModel. If you look back at fetchResults when we get results we set them back on the tripPrice property with a new TripPrice object. We then call back up to the completion block to let the &lt;strong&gt;View/ViewController&lt;/strong&gt; (presentation layer) know it’s time to redraw the view.&lt;/p&gt;

&lt;h2 id=&quot;reactive-functional-programming--mvvm&quot;&gt;Reactive functional programming &amp;amp; MVVM&lt;/h2&gt;

&lt;p&gt;There is another mechanism for views to be made aware that they need to redraw, thats in the form of signals with reactive functional programming (&lt;strong&gt;RFP&lt;/strong&gt;). Look up &lt;strong&gt;reactive functional programming&lt;/strong&gt; if you would like to see this concept applied to MVVM. In short, there’s a constant stream of signals being sent from the view models. The views subscribe to these signals, much like a FM radio, constantly listening. If the view hears something that interests them, like say “Hide Checkout Button” then the view will pick that value up and set its checkout button to hidden. The MVVM never hold view logic, as in, it doesn’t know what element to hide, nor what property its values are getting set on. It simply holds state and the logic of that state.&lt;/p&gt;

&lt;p&gt;So when the view gets a signal “Hide Checkout Button”, in the &lt;strong&gt;view model&lt;/strong&gt; you will see something like:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;checkoutButtonShouldBeVisible&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but then in the &lt;strong&gt;view&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;checkoutButtonShouldBeVisible&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;checkoutButton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hidden&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;benefits-of-mvvm&quot;&gt;Benefits of MVVM&lt;/h2&gt;

&lt;h3 id=&quot;modular-is-better&quot;&gt;Modular is better&lt;/h3&gt;

&lt;p&gt;As you can see the view model is very modular. You pass in dependencies that it needs. Functions of the view model are broken down per responsibility and have minimal mutation on the object. This means testing becomes a breeze and is MVVM’s biggest win for me. You’re set up for dependency injection, meaning, you can pass in all the objects and their values without having to set up the view hierarchy, set up viewControllers etc. You’re then able to mock all the objects you like and build test coverage on a myriad of scenarios, all whilst testing the view model only.&lt;/p&gt;

&lt;h3 id=&quot;rfp&quot;&gt;RFP&lt;/h3&gt;

&lt;p&gt;When RFP is thrown into the mix, MVVM comes into its own. The ability for a view to react to the change of a properties state automatically is powerful. RFP comes with its own challenges though, and for that I don’t use it on the iOS platform (debugging is/was hell). Binding VM property state to properties on views allows direct mapping of state to view side effects. Its powerful, but with great power, comes great debugging. Be warned, you can go overboard with signals and RFP.&lt;/p&gt;

&lt;h3 id=&quot;maintainability&quot;&gt;Maintainability&lt;/h3&gt;

&lt;p&gt;No longer is your logic spread over multiple files for a particular screen. You can easily narrow in on a particular area of your app and know (hopefully) that all of its associated logic is in its counterpart ViewModel file. Having logic in a centralized place for a particular concern is a big win for maintainability.&lt;/p&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;Further reading&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2zj4qvl&quot;&gt;Clean Code: A Handbook of Agile Software Craftsmanship&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2zhT2Qr&quot;&gt;The Pragmatic Programmer: From Journeyman to Master&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2zhTj5V&quot;&gt;Android Programming: The Big Nerd Ranch Guide (3rd Edition)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2zhTFth&quot;&gt;iOS Programming: The Big Nerd Ranch Guide (6th Edition)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				
				<pubDate>Fri, 03 Nov 2017 00:00:00 -0700</pubDate>
				<link>http://manageering.us/2017/11/03/mvvm-for-ems/</link>
				<guid isPermaLink="true">http://manageering.us/2017/11/03/mvvm-for-ems/</guid>
			</item>
		
			<item>
				<title>The one on one structure</title>
				
					
						<dc:creator>RS</dc:creator>
					
				
				
					<description>&lt;p&gt;When I first went headfirst into the EM role I must admit, I was winging it. I went from a tech lead position, to an organically found management position, then when the title flipped it suddenly the game changed. Expectations of conducting 1:1’s were not part of my duties. No one mentioned the purpose of a 1:1, let alone what you do in a 1:1. I have to admit, it was mainly just a sync up on what people were working on. I didn’t like it, it felt… awkward.&lt;/p&gt;

&lt;p&gt;The awkwardness got to a point where 1:1’s would start to slip off the calendar. It would only be until something had to be said that we would have a “1:1”. Where did that leave me? Well, in a place where a 1:1 would be a thing to dread. I was in a tight space, little mentorship and no pathway out. I reached out to a friend who put me onto the book &lt;a href=&quot;http://amzn.to/2zeUl2h&quot;&gt;The Effective Manager&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The book talks about many things. One thing I’ll delve into now from the book is the structure of a 1:1. It helped me effectively use the time in my 1:1’s. By following the structure it made me, and I hope my direct, look forward to 1:1’s.&lt;/p&gt;

&lt;h2 id=&quot;you-talk&quot;&gt;You talk&lt;/h2&gt;

&lt;p&gt;A one on one isn’t just you talking to the direct. See a critical component in the employee to manager relationship, is, as you guessed it, trust. You need to build trust, be constantly building it. Too often managers go into one on ones and use it as their venting session, or to just talk about something the direct did wrong. Why would a direct open up to you and confide in you when either a) It’s just you talking or b) you just scold them for something they might of done inadequately. So this first 10mins should be left to your direct to talk.&lt;/p&gt;

&lt;p&gt;Open up the 1:1 with something like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tell me what’s going on in your world?&lt;/li&gt;
  &lt;li&gt;How’s your week been?&lt;/li&gt;
  &lt;li&gt;What are you up to these days?&lt;/li&gt;
  &lt;li&gt;How’d you go this week?&lt;/li&gt;
  &lt;li&gt;How are you?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Leave it open ended, because really, this 1:1 is mainly about them. If they use the entire time up to speak, then so be it. It’s a great way to build the trust, by showing that this is a safe environment to confide in. Of course try and converse with the individual, prod for more elaboration or provide some additional insight, but this time isn’t yours, it’s all about them.&lt;/p&gt;

&lt;h2 id=&quot;now-i-talk&quot;&gt;Now I talk&lt;/h2&gt;

&lt;p&gt;This part is you to provide insight into what you’re up to. Share your perspective on how the team or individual is going. Provide some background story on the week and share some details that may smooth over some uncertainty. It could be a simple status update as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;That outage this week was because of the oracle slave server hanging. That caused an outage downstream and we got hit with a deluge of complaints as we’re the client. I think we might have a post-mortem coming up for it.&lt;/li&gt;
  &lt;li&gt;I’ve been trying to get some developers from other teams to come over and talk about MVVM with us.&lt;/li&gt;
  &lt;li&gt;We’re doing well with recruitment, I want to thank you for your involvement with that.&lt;/li&gt;
  &lt;li&gt;Let’s talk about James leaving, how do you think the team is? I’m thinking perhaps we get an API engineer in as a replacement to better purpose the role for a gap in our team skills.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is another 10mins worth of just you talking. Don’t be detracted if this turns into a conversation and don’t block your direct out. If they want more clarification or details into what you’re discussing, that is a data point in itself. Give them the data and use that to calculate whether or not to open the discussion up wider to the rest of the team.&lt;/p&gt;

&lt;h2 id=&quot;the-future&quot;&gt;The future&lt;/h2&gt;

&lt;p&gt;The last whatever minutes you have are now to discuss goals. Short term and long term goals. Discuss what the next week looks like. Opportunities ahead and how you see that the direct can capitalize on any that are at their disposal. Discuss some areas of weakness you feel that they should concentrate and focus on in the next week. Revisit larger goals and discuss their progress. Keep the eye on the prize.&lt;/p&gt;

&lt;p&gt;Sure discussions of promotions may come up in these 1:1’s when you discuss the future. I will do a separate post on how to discuss promotions. For now feel free to discuss that in the realm of long term goals. If that is the most pertinent goal then so be it, but relate it back to pressing matters in the short and long term. Relate it back to the goals you have hopefully setup with them in the past 3 months.&lt;/p&gt;

&lt;h2 id=&quot;the-implementation-details&quot;&gt;The implementation details&lt;/h2&gt;

&lt;p&gt;Setup your 1:1’s for a tight feedback loop. Keep your ability to calibrate tight and in-turn with the world that the individual is operating in. Like goals, keep your influence as agile as possible. For this reason I hold my 1:1’s weekly. They’re added to both my direct’s and my own calendars and repeat weekly. I check in with my direct before scheduling to try find a time that works for us both. Once its on the calendar it signifies to the individual that their time is important to me and that I am not above dedicating 30mins a week to them, because I’m not. It’s my job and this is a tool to do my job.&lt;/p&gt;

&lt;p&gt;So 30mins for:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;10 - 30mins for them&lt;/li&gt;
  &lt;li&gt;10mins for me (if there is time)&lt;/li&gt;
  &lt;li&gt;10mins for the future (if there is time)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-effective-manager&quot;&gt;The Effective Manager&lt;/h2&gt;

&lt;p&gt;Now there may be push back if you’ve held off for so long to get 1:1’s onto the calendar. “Not another meeting”! is something you may hear. Perhaps you’ve used 1:1’s in the past only for negative feedback and your direct is rejecting the fact they need more of the past. Try and rebuild the trust and run them through the proposed feedback.&lt;/p&gt;

&lt;p&gt;I highly recommend reading &lt;a href=&quot;http://amzn.to/2zeUl2h&quot;&gt;The Effective Manager&lt;/a&gt;. They go into much more detail on what to say in 1:1’s when you’re just starting them up for the first time. How to prove their value, and what to do when a direct flat out says no. Please read it. It seriously changed my approach to management and gave me the confidence needed. It more importantly gave me back one of the most effective management tools in my toolkit.&lt;/p&gt;
</description>
				
				<pubDate>Thu, 02 Nov 2017 00:00:00 -0700</pubDate>
				<link>http://manageering.us/2017/11/02/the-one-on-one/</link>
				<guid isPermaLink="true">http://manageering.us/2017/11/02/the-one-on-one/</guid>
			</item>
		
			<item>
				<title>Should an Engineering Manager Know How to Code</title>
				
					
						<dc:creator>RS</dc:creator>
					
				
				
					<description>&lt;p&gt;Firstly what is an engineering management position? It is an odd role, its not a tech lead, but its not strictly a HR management position either. As an EM you are expected to get results from a team of technically minded people; developers, QA; and get all technical stakeholders in sync. So does that mean you should be in the weeds and be writing and reading code?&lt;/p&gt;

&lt;h2 id=&quot;being-able-to-relate&quot;&gt;Being able to relate&lt;/h2&gt;

&lt;p&gt;A key part to management and any leadership position is your ability to influence. There are many mechanisms and tools at your disposal, however one key tool I find that has helped me is being able to relate to my directs. Relating to what they’re working on, the challenges they face, opportunities at their disposal and, very importantly, deeply understanding the current toolset and ecosystem by which they operate in.&lt;/p&gt;

&lt;p&gt;Not being able to relate to your directs indicates a disconnect. A lack of understanding of what they’re up against, their priorities, their difficulties. Relating also comes in the form of their career progression. What does it take to get to the next level? Do you know what that even entails or means for this individual? If you can’t relate to them and their circumstances how can you communicate effectively, more importantly how can you influence the individual?&lt;/p&gt;

&lt;p&gt;One step further how are you able to influence a team without understanding what they’re talking about? Here is a real world example:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We’re thinking about moving towards MVVM and leaving behind MVC. We want to do this for the next project.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;the-respect&quot;&gt;The respect&lt;/h2&gt;

</description>
				
				<pubDate>Thu, 02 Nov 2017 00:00:00 -0700</pubDate>
				<link>http://manageering.us/2017/11/02/should-ems-know-how-to-code/</link>
				<guid isPermaLink="true">http://manageering.us/2017/11/02/should-ems-know-how-to-code/</guid>
			</item>
		
			<item>
				<title>Putting Your Shoes On Is The Hardest Part</title>
				
					
						<dc:creator>RS</dc:creator>
					
				
				
					<description>&lt;p&gt;It’s the old adage:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The hardest part of getting fit, is putting your shoes on&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let’s play this out for a little bit. You’ve probably had a time in the past where you’ve promised yourself “tomorrow I’m going to wake up early and go for a run” or “when I get home from work, I’m going to spend an hour working on the back deck”. What actually happens is you never take the first movement at crunch time to make it happen. You either got distracted, demotivated or the snooze button got slammed and you and your trainers got to sleep in longer.&lt;/p&gt;

&lt;p&gt;I would like to present various ways that I’ve overcome this first, yet difficult step.&lt;/p&gt;

&lt;h2 id=&quot;its-all-downhill-when-you-have-routine-on-your-side&quot;&gt;It’s all downhill when you have routine on your side&lt;/h2&gt;

&lt;p&gt;I want to promise you that once you start taking these difficult first steps, the feeling of resistance, distraction, demotivation will falter. Taking the first step will turn into a natural reflex. You can multitask whilst setting yourself up for the next morning, or unconsciously prepare your mind for the duties that await you when you walk through the front door at home.&lt;/p&gt;

&lt;p&gt;Once you have routine on your side, it becomes less of setting up for the task and rather about the task itself.&lt;/p&gt;

&lt;h2 id=&quot;techniques-to-make-routine-your-friend&quot;&gt;Techniques to make routine your friend&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Accountability buddy&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;Finding someone to hold you accountable is the easiest means to ensuring you hold the commitment you made to yourself. You’re no longer disappointing yourself, you’re breaking a promise to another individual, friend, group, whatever. I find that this is enough to compel you to break even the deepest of sleeps.&lt;/p&gt;

    &lt;p&gt;Its also adds an element of companionship to that you may already look forward to. Yes, it makes it fun! Harness this promise and commitment. Its one thing to lie to yourself and let yourself get away with it. But its another thing to let someone down, and also your image and trustworthiness falter.&lt;/p&gt;

    &lt;p&gt;If the activity is rather an individual activity, like, flossing your teeth, then just vocalize to a friend, partner, dog or cat that you will begin flossing your teeth every night. Let your actions have some sort of visibility to build some level of accountability.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Join a group&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;See where I’m going with this whole social aspect to creating a routine. Another avenue is joining a group, or getting multiple people involved in what you’re setting out to do. Perhaps that is joining a meetup group. Or it could be simply being around people, like going to a library, to start seeing familiar faces. Often people take a lot of joy in going to a cafe and simply being around others as a means of committing to whatever they have set out to achieve (with the bonus of getting coffee and a bagel).&lt;/p&gt;

    &lt;p&gt;There are also online forums you can join to participate and help track and keep you in check for your target. Simply by reaching out for assistance and stating to the ether that you will do something, adds a lot more weight to you actually lacing up those trainers, or getting the hammer out, or dusting off the guitar.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Set a goal&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;Setting a goal sounds like a given, right? Well not having a goal and saying “I’ll go for a run tomorrow” is not a goal. Getting fit, getting to a certain weight, completing the back deck before Christmas time, finishing a book each month, doing yoga 2 times a month, are goals.&lt;/p&gt;

    &lt;p&gt;So how do you start with setting a goal? If its sports, give yourself a weight, a distance, a time, a frequency for example. If its a project, a hobby or a ritual, give yourself a deadline, or a quota. Don’t let the activity just become a lonely task. Let you task amount to a step in achieving a goal. It adds more accountability to the task and subsequent tasks thereafter. Set your sights on an attainable goal and nail it!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Join a challenge&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;There are so many online resources at your disposal for joining a challenge. There are online bookclubs, where you will finish a book before the meetup. There of course are the online sporting resources: Strava, RunKeeper, Fitocracy, MapMyRun, Garmin Connect. There are also forums where you can post your status or mark your activities.&lt;/p&gt;

    &lt;p&gt;I personally love seeing DIY projects from the ground up on a forum getting posted in stages. I also love the comments from others which is perpetuating the exponential growth of the project. Its addictive!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Keep a journal or blog&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;Dear diary is powerful tool. Your thoughts on paper is a great reflection tool. Its also a great way to examine thoughts in a slower pace, to which you can analyze future behaviors or set aspirations to work towards. It can be private or it can be public and out in the open as a blog can be. Posting to instagram during an activity also helps build an attachment and spark of excitement to bring you to the first step out or in the door.&lt;/p&gt;

    &lt;p&gt;One catch to this however is ensure that it become as much a habit as the task you’re getting into. Make it be as much of the doing the task rather than an auxiliary. Remember, these are tools to support you to build a routine. The sooner you give up blogging or journaling, the sooner you give up building the routine.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;get-inspired&quot;&gt;Get inspired&lt;/h2&gt;

&lt;p&gt;There are plenty of inspiring books out there that I have read that are either rags to riches, or zero to hero. Here are a few that had me totally engrossed in the story:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2zqbXJB&quot;&gt;Finding Ultra: Rejecting Middle Age, Becoming One of the World’s Fittest Men, and Discovering Myself&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2zpKesp&quot;&gt;The Girl with the Lower Back Tattoo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2zpKIid&quot;&gt;Wild&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2zqd4sL&quot;&gt;I Can’t Make This Up: Life Lessons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				
				<pubDate>Wed, 01 Nov 2017 00:00:00 -0700</pubDate>
				<link>http://manageering.us/2017/11/01/putting-shoes-on-is-the-hardest-part/</link>
				<guid isPermaLink="true">http://manageering.us/2017/11/01/putting-shoes-on-is-the-hardest-part/</guid>
			</item>
		
			<item>
				<title>Many Books Many Similar Learnings</title>
				
					
						<dc:creator>RS</dc:creator>
					
				
				
					<description>&lt;p&gt;I’ve read a fair few books in the past 2 years. Some self help books, others specific to management. After a while the messages all seem to blur together. How to have composure, foresight, goal setting, communicating, motivating, leading, physical/mental health, all seem to have a general theme. For the time being I’m going to try and be succinct as possible and provide a list of over arching themes. But I do recommend the following books.&lt;/p&gt;

&lt;h2 id=&quot;the-books&quot;&gt;The books&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2A8VEho&quot;&gt;The Effective Manager&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2A8dNvU&quot;&gt;Braving the Wilderness: The Quest for True Belonging and the Courage to Stand Alone&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2A7uibp&quot;&gt;The Miracle Morning: The Not-So-Obvious Secret Guaranteed to Transform Your Life (Before 8AM)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2A4R43z&quot;&gt;Awaken the Giant Within: How to Take Immediate Control of Your Mental, Emotional, Physical and Financial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2A8XBue&quot;&gt;Mindset: The New Psychology of Success&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2A7eZzv&quot;&gt;The Compound Effect&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-themes&quot;&gt;The themes&lt;/h2&gt;

&lt;p&gt;Now a lot of this can be borrowed from the &lt;a href=&quot;http://amzn.to/2A7uibp&quot;&gt;Miracle Morning&lt;/a&gt;; though that is not to say all of this is limited to the morning. Hal Elrod broke down a lot of the themes into broad sections. I won’t list them out specifically as some can be split up. I do however recommend reading that book as a great first start into some ceremonies you can incorporate into your day…. if you’re not a morning person.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Reflection&lt;/strong&gt; - gathering thoughts from previous actions or encounters. Articulate them, verbally or written.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Meditation&lt;/strong&gt; - quieten the mind, raise your senses&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Visualization&lt;/strong&gt; - imagine where you want to be, or an analogy of a race car driver “If you don’t want to crash, look where you want to go”&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Believe&lt;/strong&gt; - change your belief systems. Remove any self imposed limitations on your thoughts and simply do. Holding oneself back is the first step backwards.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Exercise&lt;/strong&gt; - get those endorphins flowing and your attention into the now&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Compound&lt;/strong&gt; - small changes in yourself, your routine and your beliefs ultimately compound upon massive change&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Vocabulary&lt;/strong&gt; - Flip the negative and deprecative tone to look towards solutions or positive motion&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;External Force&lt;/strong&gt; - There is some talk of a higher power in some of these books. I previously thought I was on the Nihilist camp; in that, rejection of religion and all the principles and stigma attached. However some books rather linked a belief in any higher power, even if that higher power was a stuffed animal on your desk, as a means of removing self absorbed interest in oneself and shifting focus outside. Interesting concept and a way to remind yourself, you are not the center of the universe… until science proves otherwise.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Disrupt&lt;/strong&gt; - If a mental image comes to mind, you have the ability to distort it and thus alter the image retrieved at a future time. Add color, add tone, add a different perspective. The original emotion will be altered next time you come across this artifact.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Neural Pathways&lt;/strong&gt; - Be aware that your brain is a series of pathways. Like a park, paths form from higher traffic, or, if they’re used more. The more you practice a positive or negative task, the more reinforcement you’re physically forming in your brain. Habits happen, habits can be exercised.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Connectedness&lt;/strong&gt; - Connect with people. Find groups. Find relationships, build networks. Find belonging not find yourself trying to “fit in”.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Focus on Breath&lt;/strong&gt; - Like these pathways, reactions become instinctual. Control adrenaline responses and slow the mind by focusing on your breath. Connect your body in a short moment and slow your mind to control your reaction going forward.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;so-what-am-i-doing-with-it&quot;&gt;So what am I doing with it?&lt;/h2&gt;

&lt;p&gt;It has been great to delve into different practices and start to incorporate them into my daily life. For instance, this falls into the reflection component. However more importantly a lot of these components have opened my eyes up to behaviour and widened my toolset for approaching or confronting issues.&lt;/p&gt;

&lt;p&gt;One point I left out of this list is reading. I will not stop reading. Different perspectives open the mind and challenge oneself. I’ll continue to update this post with more books and learnings.&lt;/p&gt;

&lt;h2 id=&quot;more-inspirational-books&quot;&gt;More inspirational books&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2A6FsgD&quot;&gt;Wild&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2A8B8NN&quot;&gt;The Long Haul: A Trucker’s Tales of Life on the Road &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://amzn.to/2A82Fif&quot;&gt;The Hard Thing About Hard Things: Building a Business When There Are No Easy Answers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				
				<pubDate>Wed, 01 Nov 2017 00:00:00 -0700</pubDate>
				<link>http://manageering.us/2017/11/01/many-books-many-similar-learnings/</link>
				<guid isPermaLink="true">http://manageering.us/2017/11/01/many-books-many-similar-learnings/</guid>
			</item>
		
			<item>
				<title>What makes performance</title>
				
					
						<dc:creator>RS</dc:creator>
					
				
				
					<description>&lt;p&gt;As managers, we all want our teams to succeed. To generate results. To achieve contribute to achieving the company’s objectives. Monitoring &amp;amp; calibrating efforts that affect your team’s performance is&lt;/p&gt;

</description>
				
				<pubDate>Thu, 19 Oct 2017 00:00:00 -0700</pubDate>
				<link>http://manageering.us/2017/10/19/youre-an-entertainer/</link>
				<guid isPermaLink="true">http://manageering.us/2017/10/19/youre-an-entertainer/</guid>
			</item>
		
			<item>
				<title>Owning goals with OKRs</title>
				
					
						<dc:creator>RS</dc:creator>
					
				
				
					<description>&lt;p&gt;Goals are a vital ingredient for us to carry out a set of tasks in an efficient manner. A goal is the purpose for your actions. Without a goal, why are you doing what you’re doing? Its when we fully understand and internalize our goals that we create a sense of purpose and self worth. That our actions are bringing us closer to an objective and in turn, have meaning and value. Our efforts are then not fruitless, as mundane as they may sometimes appear.&lt;/p&gt;

&lt;p&gt;You might be one of many that sometimes lose grasp of your own life goals, career goals, fitness, financial, relationship, whatever it may be goals. When that happens we lose grasp of direction and then potentially even spiral down into a loss of aspiration, self worth and so on. The same can be seen when your manager or lead fails to communicate and form agreeance of common or personal goals. So no wonder you may have disdain for your job. You don’t know why you’re doing your immediate task, or you may not even know why your job exists in the first place! Eekkk.&lt;/p&gt;

&lt;p&gt;The process of setting goals is extremely important. Goals need to be well defined, obtainable, clearly communicated and understood. Once individuals start seeing the goal posts being setup, and the point of the goal posts, they will internalize the reason for the how. The how being the steps or actions needed to get to that goalpost.&lt;/p&gt;

&lt;p&gt;I hope to detail the importance of goals and techniques I’ve used in setting, communicating, getting team members  to own and strive to achieving the goals laid out. We’ll start off by reviewing the tool, then get into the techniques, then the findings and discussions.&lt;/p&gt;

&lt;h2 id=&quot;okrs&quot;&gt;OKRs&lt;/h2&gt;
&lt;p&gt;OKRs: Objectives and Key Results &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. Its a nice acronym for basically coming up with some overarching goals and then breaking out measurable deliverables that would independently contribute to the success of that objective. Let’s start by taking an example of an objective:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Increase Code Quality”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pretty straight forward. The objective is to heighten the quality of code. A little open ended yes, but that is the objective. Code that is pre-existing or about to get into the codebase, needs to be of a higher quality than what preexisted. You’re wondering now, “okay, but that doesn’t give anyone any idea as to what exactly needs to be done?” This is where key results come into it. Let me break this down into a format now for which you may present to a direct.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Objective:&lt;/em&gt; Increase Code Quality
&lt;em&gt;Key Results:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;All PR’s (pull requests) to have minimum of 90% code coverage&lt;/li&gt;
  &lt;li&gt;10 PR’s to be conducted with TDD&lt;/li&gt;
  &lt;li&gt;Pair on 5 stories, start to finish, with a team member outside of our team&lt;/li&gt;
  &lt;li&gt;Review 20 PR’s in and outside of the team&lt;/li&gt;
  &lt;li&gt;Create 8 improvement cards&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So first off. What you see above are key results. Key results are quantifiable. You should imagine your key results as a slider. Did I or did the individual get 80% of the goal, 120% of the goal etc. Each set of key results is to be placed on the same timeline as the objectives. That way all key results can be measured fairly without any time bias. It also allows you to create key results in a way that is almost like a perfect recipe for achieving the objective.&lt;/p&gt;

&lt;h2 id=&quot;the-timeline&quot;&gt;The timeline&lt;/h2&gt;

&lt;p&gt;The OKRs I set up with my directs are revisited and adjusted every 3 months. Reviewing OKRs however occurs on a weekly basis. This duration I find to work quite well. Its a target that the individual can visualise and work back from. They might have some personal activities or events coming up at work that they can take into account and factor in to how they might approach it. This cadence also allows for objectives and key results to be tweaked. Keeping goals and deliverable targets somewhat agile and pragmatic in the project’s development.&lt;/p&gt;

&lt;p&gt;Reflection and visualization are tools I strongly encourage you as a member to look into. I find having a weekly cadence is a great way to enforce reflection and also trigger visualization motions to come into play. I will get into that more later however in communicating OKRs.&lt;/p&gt;

&lt;h2 id=&quot;how-to-define-an-objective&quot;&gt;How to define an objective&lt;/h2&gt;
&lt;p&gt;First of all, as a manager, your job is aligning your team in a way that will successfully achieve whatever the wider goals may be, hopefully with longevity of the team at mind. With this said, coming up with objectives should be structured on an individual basis. It is very much circumstantial to the strengths, weaknesses and personal goals of the individual. Ensure both short-term and longterm goals are factored in here, as it should not just be the goals of the immediate project that the objectives are catered to. Instead longer term career aspirations and developmental objectives should be factored in also.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Some examples of objectives:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Swim faster&lt;/li&gt;
  &lt;li&gt;Understand Jazz&lt;/li&gt;
  &lt;li&gt;Start a potluck for the office&lt;/li&gt;
  &lt;li&gt;Find a new office manager&lt;/li&gt;
  &lt;li&gt;Be Amazing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are objectives remember. Not goals. We strive to improve on our objectives, but we strive to achieve our key results. Thus our goals are to achieve our individual key results so that we are working towards our objectives and in turn the goals of the team are realized. It’s a meta way of breaking down team goals down into traits, categories or objectives. From objectives we find success metrics upon various tasks and or deliverables that contribute to the goal of the objective. See how that bubbles up? But how do we break it down? How do you identify what components would makeup the success or advancement of an objective? Let’s examine the KR’s, the key results.&lt;/p&gt;

&lt;h2 id=&quot;key-results&quot;&gt;Key results&lt;/h2&gt;

&lt;p&gt;Now we step into the actual definitions of goals and expected outcomes. The key result are tangible deliverables you are able to accurately track. Whether it be measured in terms of a “delivered x” number of things, or the ability to put in place a quality metric. Whatever metric is selected to measure the key result, it most certainly needs to be clearly defined and without any grey area as to its measurement.&lt;/p&gt;

&lt;p&gt;OKR’s can be boolean yes. However as a manager really if you are finding that the KR’s you’re defining are trending to be all boolean and similar in nature, perhaps you are actually defining the objective and not key results? Key results work best when there is a particular target of multiple observations. This also enables the ability to set key results up in the sense of stretch goals. So in the very nature if you feel a developer can achieve reviewing 10 pull requests a week, why not try setting that number to 15 and seeing how performance tracks. If you set a target, at least you will be able to see how people are tracking against the target. This may sound a bit unrealistic, however please see the next section for how to communicate key results.&lt;/p&gt;

&lt;p&gt;So for some examples that I give my senior developers. Three categories stand out: Delivery, Influence, Quality:&lt;/p&gt;

&lt;h3 id=&quot;delivery&quot;&gt;Delivery&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Deliver 3 Pr’s a week. 36 in Total&lt;/li&gt;
  &lt;li&gt;Do 10 PR’s with TDD&lt;/li&gt;
  &lt;li&gt;Assist with 3 Platform Items&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;influence&quot;&gt;Influence&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Attend 80% of Developer Demos&lt;/li&gt;
  &lt;li&gt;Present 3 Developer Demos&lt;/li&gt;
  &lt;li&gt;Run 2 Standup/Grooming/Planning Sessions&lt;/li&gt;
  &lt;li&gt;Check in with another member of another team 5 times for at least 30mins&lt;/li&gt;
  &lt;li&gt;Find 4 PR’s that need help and sit with the individual to refactor/fix&lt;/li&gt;
  &lt;li&gt;In our 1:1’s demo 5 areas of improvement&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;quality&quot;&gt;Quality&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Review 30 PR’s&lt;/li&gt;
  &lt;li&gt;Pair on 7 Stories - Start to Finish&lt;/li&gt;
  &lt;li&gt;Present clean code findings in 5 1:1’s&lt;/li&gt;
  &lt;li&gt;Generate 10 Improvement cards&lt;/li&gt;
  &lt;li&gt;Write 3 forum or blog posts on technical areas of interest&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;implementing--communicating-okrs&quot;&gt;Implementing &amp;amp; communicating OKRs&lt;/h2&gt;

&lt;p&gt;When I first kicked off OKRs as a tool for setting individual goals it was quite interesting. At first I got a lot of confusion from my directs. They felt that they were being tracked to a tee of their delivery. They felt that this was going to relate directly to their performance reviews. If they didn’t nail their OKRs, of which both of us had visibility on, that then they would see less monetary value at the end of the year.&lt;/p&gt;

&lt;p&gt;I approached this somewhat interesting circumstance by decoupling it immediately. Instead I highlighted that &lt;strong&gt;the OKRs are nothing but a tool for you to reflect and visualize your next week&lt;/strong&gt;. I had to stress that they were only a tool I had set up for the individual that split out an objective into a means for which the individual could get more focus on. It was merely a way to break down a somewhat overbearing goal into managable chunks.&lt;/p&gt;

&lt;p&gt;Once it was established this was just a tool at their disposal they immediately fell in love with the power it gave them. It provided insight into how they were tracking against their objectives. Some directs took so much ownership on their OKRs they started mini self retro’s on their Trello board. Saying what worked well and what didn’t work well in relation to the objectives in their OKRs, and how they failed to meet some key results they previously thought they would of achieved that week.&lt;/p&gt;

&lt;p&gt;They reflected, and they visualized how the next week would work. This is the exact feedback cycle I had hoped to create in my 1:1’s; yet it was now coming from within the team members.&lt;/p&gt;

&lt;h2 id=&quot;using-okrs-in-11s&quot;&gt;Using OKR’s in 1:1’s&lt;/h2&gt;

&lt;p&gt;A mentioned above, Objectives and the key results were tweaked every 3 months. Key results however were reviewed every week and discussed in detail during 1:1’s. I wanted to get insight into how the direct felt they were going upon reflecting on their key results. Why didn’t they get their target? Also more alarmingly and I guess more rewardingly is why are some key results not moving at all. This fast feedback cycle allowed both of us to calibrate how the next week would pan out. What I could do as a manager to open up opportunities or formulate the teams activities in a way that could best achieve these objectives.&lt;/p&gt;

&lt;p&gt;To begin with we used to walk down the key results together. It felt a little micromanaging at first but it was a neccessity to getting both of us comfortable using the tool. It also proved to build trust between both of us as blame was never put on the individual if results weren’t being met, instead ways to look to the future on how to achieve the objectives was far more beneficial.&lt;/p&gt;

&lt;h2 id=&quot;but-what-about-performance&quot;&gt;But what about performance&lt;/h2&gt;

&lt;p&gt;I hear you asking:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;So if you don’t uphold poor delivery on the key results, then what is the point?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well let’s think of it this way. If you as a manager have set up your OKR’s correctly and if you are giving constant feedback on performance (not related to the OKRs) then really, those key results should be moving on their own.&lt;/p&gt;

&lt;p&gt;It all comes down to feedback; and you monitoring the individual’s performance outside of the key results you’ve put forward. Is the person focused? Is product or the project manager promoting opportunities for the individual to be productive and achieving previously agreed goals. if the team is healthy and the individual is productive, then you should be seeing results against the objectives you have set out.&lt;/p&gt;

&lt;h2 id=&quot;final-thoughts&quot;&gt;Final thoughts&lt;/h2&gt;

&lt;p&gt;OKRs are only a tool. Its not a tool for performance reviews. Its a tool to break down a broad and complex objective, into targets that can be visible and understandable to the human brain. Its an amazing tool for individuals to get reflection in 1:1’s on the week they just had and the week they’re about to head into. They’re fine grained enough to tap into peoples strengths and improve upon people’s weaknesses whilst still allowing the project’s goals to be kept in mind.&lt;/p&gt;

&lt;p&gt;OKRs are difficult at first to implement. Especially if your team feels like a previous manager was a bit micromanagey. But build the trust that they won’t be upheld to the key results. Instead use your feedback on performance and areas of improvement without having the OKRs out on the table.&lt;/p&gt;

&lt;h3 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h3&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/OKR&quot;&gt;History of OKRs&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
				
				<pubDate>Thu, 19 Oct 2017 00:00:00 -0700</pubDate>
				<link>http://manageering.us/2017/10/19/owning-goals-with-okrs/</link>
				<guid isPermaLink="true">http://manageering.us/2017/10/19/owning-goals-with-okrs/</guid>
			</item>
		
			<item>
				<title>Recruiting Outsourcing To The Team</title>
				
					
						<dc:creator>RS</dc:creator>
					
				
				
					<description>&lt;h3 id=&quot;a-bit-of-backstory&quot;&gt;A bit of backstory&lt;/h3&gt;

&lt;p&gt;I didn’t realize how difficult recruiting was until I started doing it myself.
Not only that; I was recruiting in the Bay Area. To say the market is
competitive is an understatement. The market is insane, with a heavy dosage of
crazy and a bump of “wow, you leave cupcakes at the doorstep of your candidates
house as part of your offer strategy?”¹ So competitive that video phone screens,
coding challenges for homework and even an onsite loop longer than half a day
seems to be beneath a lot of people.&lt;/p&gt;

&lt;p&gt;Recruiting we all know is a logistical nightmare. Finding candidates, reviewing
resumes, scheduling phone screens, live coding rounds, on-sites, feedback loops,
offer packets and start dates with orientation scheduling etc. leaves… well…
very little time to do your own primary role, whatever that may be.&lt;/p&gt;

&lt;p&gt;Shortcuts can’t be had however. You get the wrong candidate on your team and you
may be up in a scenario worse than you started with. Hiring the right candidate,
with minimal stress, where the entire team will be happy is the ultimate goal.
You will have added a friend and a capable worker to the seat next to them is
the ultimate goal.&lt;/p&gt;

&lt;p&gt;This ultimate goal is most effectively achieved via &lt;strong&gt;ownership.&lt;/strong&gt; Giving the
team ownership of their problems and empowering them to arrive at a solution.
&lt;strong&gt;Ownership&lt;/strong&gt; on what they need from an individual and empowering them with a
voice and interactions throughout the entire recruitment process.&lt;/p&gt;

&lt;p&gt;I outsourced. Not to a recruiter to do it all for me, but for the team to own
it.&lt;/p&gt;

&lt;h3 id=&quot;sweet-16&quot;&gt;Sweet 16&lt;/h3&gt;

&lt;p&gt;I never got a car for my sweet 16. Mainly because we don’t do that in the
southern hemisphere. 16 is just 2 years away from being able to legally do a lot
of things. Wait, no. Getting a car for a birthday is just absolutely ridiculous.
But let me paint the analogy.&lt;/p&gt;

&lt;p&gt;You get this car as a gift. Its awesome. You really needed a car, and a weight
is lifted of your shoulders. You might have been expecting a car because you
live in Palo Alto and your friend Libby got a Jaguar for hers. But its not the
model you wanted. The brand is wrong, the stereo doesn’t have bluetooth and the
rims are 16” not 18”. It’ll do though. You feel spoilt for getting it, and feel
kind of morally wrong for saying inside your head “Well, it’ll get me from A to
B. I’ll just drive it at night so none of my friends see it” ⁴.&lt;/p&gt;

&lt;p&gt;But really you wished you could have gotten a cheque from your parents and told
“Hey little princess. We’re going to go car shopping for our lovely little sweet
16 snookims’ this weekend. You can get any car you want!”. You could test drive
each car, finding something that suited your needs and really, your friends
needs.&lt;/p&gt;

&lt;p&gt;Analogy probably lost. However, with the recruiting efforts I really wanted to
ensure the team had their say in what they wanted. Who they wanted to hire and
get a feel for the person they’re hiring. Can they see themselves working daily
with this person? Can they learn from this person (either from mentoring them or
themselves getting mentored)? Can this person bake cupcakes and clean up for
themselves?&lt;/p&gt;

&lt;p&gt;My ultimate goal in this entire process is that the team owns and determines
what they need and is involved right through to the person starting to warm
their seat up on their first day of work. Why? So there is no doubt, this is a
mutual fit for all parties.&lt;/p&gt;

&lt;h3 id=&quot;step-1-identify-what-to-do&quot;&gt;Step 1: identify what to do&lt;/h3&gt;

&lt;p&gt;Someone valuable leaves the company. As the heat drains from their seat, so does
the mood of the team. “Why did that person leave?” “What could of we done to
make that person stay?” “Goodbyes are hard!” “I wish I got a box of cupcakes
delivered to my doorstep” are all questions a team gets hit with.&lt;/p&gt;

&lt;p&gt;A vital question you and your team should be asking however is. What are we
going to do with the open position? The natural reaction is. Backfill it with an
identical person. Make sure their hair and eye color matches, ensure they have
drink out of the same funny snoopy mug “I want it just as snoopy mugish”. But
really. You should be asking. &lt;strong&gt;What does the team need&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It might be that the team in fact doesn’t need that position urgently filled.
Perhaps the resources allocated to that person is best used to reward key
members, or all members, on that team with compensation adjustments, promotions
into that role, more offsite training, more offsite fun, more offsite cupcakes!
Perhaps, that position could go to another office? Or plain and simply, maybe
you do need a replica of that blue eyed, orange haired muppet named beeker² that
was previously on your team.&lt;/p&gt;

&lt;p&gt;Now I know putting forward to the team that “hey, lets just take the money and
split it up, they’ll never know” is something you don’t want to put forward to
the team itself. My point is though; understand what the pain points are for the
team. The talent on board. The holes causing pain and slowing delivery. Identify
them, ensure the team does also, and determine what to do with that position.&lt;/p&gt;

&lt;h3 id=&quot;step-2-but-who&quot;&gt;Step 2: but who?&lt;/h3&gt;

&lt;p&gt;So you’ve identified that yes, you need to backfill that role. Let’s take an
extremely abstract view on this in the Bay Area and say its for a Developer
Position. Determining the &lt;strong&gt;strategic reason&lt;/strong&gt; for that position is absolutely
vital. Too often a developer leaves, we hire another developer that simply
codes. The view is too narrow and short sighted.&lt;/p&gt;

&lt;p&gt;As someone in charge of hiring, like an endgame in chess and pawn promotion, you
get to identify the traits your team is sorely longing for in this developer.
Simply giving a coding challenge and saying “hire” is not enough. You are
building a team here, not building a product. Ultimately the team will build the
product, you just need to identify all the complimenting traits of which
comprise the team, so that a beautiful product pops out the other side.&lt;/p&gt;

&lt;p&gt;So when you ask yourself or the team &lt;strong&gt;who should we be hiring&lt;/strong&gt; think about
what holes outside of the primary role this individual can assist with. Some
areas I’ve seen come in the form of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We lack mentors for our eager juniors. Find a mentor.&lt;/li&gt;
  &lt;li&gt;Meetings are dull. No one speaks up. Find someone who asks lots of questions in
your interviews or phone screens.&lt;/li&gt;
  &lt;li&gt;We are still using floppy disks to save our xCode projects to. Find someone that
is cutting edge tech and contributes to Swift Open Source projects&lt;/li&gt;
  &lt;li&gt;We need innovation. Find someone who has their own side projects.&lt;/li&gt;
  &lt;li&gt;All the devs are just doing data entry. Speak to some graduates that are unaware
of what data entry is and are keen to start low and learn.&lt;/li&gt;
  &lt;li&gt;Architecture changes more frequently than Trump visits a golf course. Find
someone who has gone in and inherited a mess and come out with rainbows flying
behind them³&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I could go on. Every team has their strengths and weaknesses. That’s because
each person on the team has their own set of beautiful strengths and weaknesses.
We’re humans. Luckily we’re different.&lt;/p&gt;

&lt;h3 id=&quot;step-3-does-the-cook-clean-up&quot;&gt;Step 3: does the cook clean up?&lt;/h3&gt;

&lt;p&gt;I don’t do too much cooking. So my answer is yes, sometimes. But seriously. This
is a question that you and the entire team, including leadership will have to
come to a consensus on. Do this before you start interviewing people. What are
the duties of this role. You’ve established the justification for the position,
you’ve identified the personality and traits for the position, now what are the
duties? what are the expectations?&lt;/p&gt;

&lt;p&gt;I’ve made this mistake, and too late in the game. We do a full interview loop
and then discussions happen (more on the process later) and people are like
“Ohhh, I thought that person was meant to be coding. The last person we had in
this position, well, they used to code”. No. Get this sorted before you start
the process. Does the cook need to clean up? Team, tell me.&lt;/p&gt;

&lt;p&gt;Here are some examples of clarifying roles:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Engineering managers should be expected to read code, but shouldn’t write code
or pick up stories. Reason: they should be able to relate to the day to day
struggles that is the life of a developer&lt;/li&gt;
  &lt;li&gt;Product Managers should be in charge of setting up AB tests.&lt;/li&gt;
  &lt;li&gt;Griffon the clown should be expected to jump inside of a lions mouth. Bozo did
it, R.I.P, it was the success of the circus leading up to the accident, but the
new clown should be expected to do the same.&lt;/li&gt;
  &lt;li&gt;Developers should be in charge of writing UI Automation tests. Our team is
headed in the direction of every QA is a developer, so, develop all of the
things.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You get the gist I hope. You really should be clarifying this with the team
prior to posting the job description so that 1. they ask pertinent questions to
the candidate 2. they don’t oversell or undersell a candidate due to a
misalignment of expectations 3. You hire a developer not a clown 4. You don’t
get a messy kitchen after all the cupcakes that have been baked.&lt;/p&gt;

&lt;h3 id=&quot;interlude&quot;&gt;Interlude&lt;/h3&gt;

&lt;p&gt;So we now know what, why and who we’re hiring. Remember at the beginning of this
I mentioned I outsourced to the team. A large practical part of that comes in
the form of the process. But as someone who has had influence on hiring, a lot
of the what, why and who is up to you to investigate with the team. Understand
their pain. Speak to leadership on strategic long term decisions. Basically
weigh up all options and determine the best position and personality for the
team and the company.&lt;/p&gt;

&lt;p&gt;Outsourcing to the team comes next. Prepare to feel like a personal assistant
and people wrangler. The goal of this, &lt;strong&gt;ownership&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;step-4-the-process&quot;&gt;Step 4: the process&lt;/h3&gt;

&lt;p&gt;This next step is going to be a bunch of practical advice. To how I structured
the interview process to how to avoid common mistakes at crunch time.&lt;/p&gt;

&lt;h4 id=&quot;finding-candidates&quot;&gt;Finding candidates&lt;/h4&gt;

&lt;p&gt;I was lucky to have 10 external vendors and 1 internal unit (lets call it the
recruiting team) bombard us with resumes for open positions. The recruiting team
would already be helping the process by pre-filtering.&lt;/p&gt;

&lt;p&gt;Some key aspects of the what, who and how were captured in a document by the
team and handed to the recruiters. So before any resume came in front of the
team’s eyes there would be a prescreening. Some things that were useful to
include, an iOS developer as an example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Minimum experience (5 years for intermediate dev, 7+ senior etc)&lt;/li&gt;
  &lt;li&gt;Must know Swift 3 &amp;amp; Objective C&lt;/li&gt;
  &lt;li&gt;Experience with TDD, provide an answer as to what it is and why it is beneficial&lt;/li&gt;
  &lt;li&gt;Explain what an Optional is? (pun intended)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These questions were asked by the recruiters over a telephone screen and answers
were recorded and presented (if obvious/confident in the answers). Of course you
have to get the recruiters up to speed as to what TDD is, what an optional is.
Experience however, usually black and white.&lt;/p&gt;

&lt;h3 id=&quot;the-phases&quot;&gt;The phases&lt;/h3&gt;

&lt;p&gt;Now each of the phases below in the process are done in pairs. Pairs so that a
high level of exposure is on the candidate for the team, and the candidate has
an exposure of the team they may be working in. Pairs are also great at
deliberating on the outcome on how to proceed. Well in my experience, the debate
is sometimes magical to watch as it relates back to the who, what and why.&lt;/p&gt;

&lt;h4 id=&quot;the-team-gets-notified&quot;&gt;The team gets notified&lt;/h4&gt;

&lt;p&gt;They passed the first round! Next up I, the hiring manager, get the resumes. I
collect the resumes and put them on a Trello board. I also put up the responses
by the candidate (check out HireVue if you haven’t).&lt;/p&gt;

&lt;p&gt;The Trello board is organised by two sections. First: Open positions by Level.
For example I’d have columns for “Engineering Manager” “SDE II” “Senior” “SDE I”
or however many thousand levels you have in your organization. Second: The
process of which candidates are in.&lt;/p&gt;

&lt;p&gt;The idea here is that any cards in the Levels column has not yet been reviewed.
So that’s what happens. I send out a link to everyone on the team, and wider
team, to go about reviewing the resume and responses. I get direct comments on
the card with a summary of interesting points (something which people may of
missed and should consider in their vote) and then say proceed/no proceed.&lt;/p&gt;

&lt;p&gt;I only require 2+ comments to proceed until I kick off the next phase. You have
to act fast, as a duty to the team and the candidate. Bay Area is insane, offers
are almost arriving by post these days (I just moved houses, so maybe the mail
redirect isn’t in effect yet), so you have to act fast to get into competing
offers.&lt;/p&gt;

&lt;h4 id=&quot;the-team-phone-screen&quot;&gt;The team phone screen&lt;/h4&gt;

&lt;p&gt;As I mentioned the Trello board section 2 is by phase in the interview process.
The next step is the phone screen after the initial recruiter call. This is the
first interaction with the team and it is critical you invest time here. Again.
Critical that your interview panel knows what, who and how for the candidate
going into this.&lt;/p&gt;

&lt;p&gt;So saying this, we have tweaked the phone screen. It as above mentioned will be
conducted by a pair of team members plus the candidate and to be segmented as
follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Intros (5mins)&lt;/li&gt;
  &lt;li&gt;Questions from the team (technical, behavioral, whatever is pertinent to the
role and the teams need) (30mins)&lt;/li&gt;
  &lt;li&gt;Live coding or hypothetical scenarios for non technical positions (15mins)&lt;/li&gt;
  &lt;li&gt;Questions from the candidate (10mins)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Might sound rudimentary. But, we tweaked it for a reason. That reason being we
can’t afford a person to come into the office and then bomb hardcore because
really, they don’t know what XCTest is (this is just an example, did not
actually happen with XCTest, I think).&lt;/p&gt;

&lt;h4 id=&quot;code-it-code-it-live&quot;&gt;Code it. Code it live.&lt;/h4&gt;

&lt;p&gt;Now for technical positions, if the person did not do one of our HireVue rounds
(which we are still setting up) then we will do the team phone screen then a one
hour live coding challenge. This is done in the IDE of the user’s choice. It may
be a real world problem. It may be a boilerplate codebase we setup and let them
debug. It may be bake us some cupcakes from your CLI. Whatever teases out the
traits the team needs, right?&lt;/p&gt;

&lt;p&gt;So for example. Our team thrives/needs people that collaborate at the utmost
ease. So pairing remotely on a technical problem has been a strategy for us.
We’ve given problems and hope candidates ask us questions to elaborate. In fact,
our developers love it when candidates ask us how would we solve it better, then
we get stumped and work on it together.&lt;/p&gt;

&lt;p&gt;My point is. Find the &lt;strong&gt;who&lt;/strong&gt; in this candidate. It links back to the why. Once
you know the gaps, you try and see if this person can fill it. Maybe you just
need someone to build out an algorithm that just bakes cupcakes and cleans up
after itself ⁵. Then just hit on that.&lt;/p&gt;

&lt;h4 id=&quot;the-onsite&quot;&gt;The onsite&lt;/h4&gt;

&lt;p&gt;Yusssss! They made it through the gauntlet of code or behavioral questions or
recipe challenges and you &lt;strong&gt;love the candidate&lt;/strong&gt;. Now comes the onsite. How I
break down the interview process for a developer:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Welcome the candidate and give them a tour of the office. Show them the desk
  they may be working at. This is a two way street here. You get them comfortable
  in the environment from the get go and also they get to see how messy and dirty
  their desk is ⁶ (Point of contact 15mins)&lt;/li&gt;
  &lt;li&gt;Project Management Interview (pair 45mins)&lt;/li&gt;
  &lt;li&gt;Discussion with Design &amp;amp; Product (pair 30mins)&lt;/li&gt;
  &lt;li&gt;Live coding exercise (pair with pairing 45mins)&lt;/li&gt;
  &lt;li&gt;Lunch (pair wines and dines the candidate 45mins)&lt;/li&gt;
  &lt;li&gt;Architectural Round (pair 45mins)&lt;/li&gt;
  &lt;li&gt;Live coding Exercise (pair 45mins)&lt;/li&gt;
  &lt;li&gt;Engineering Managers (pair 45mins)&lt;/li&gt;
  &lt;li&gt;Recap and closing questions (Point of contact 15mins)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Pair = Two members of the team interviewing/working/laughing with the
candidate&lt;br /&gt; Point of contact = A familiar face to go to if scheduling messes
up, or any particular questions outside the scope of a session. A Hi &amp;amp; Bye
person (can also be in one of the sessions).&lt;/p&gt;

&lt;p&gt;There are a few universal items in this list that fall outside of a developer
role and should be tweaked accordingly. 45mins is a great amount of time. The
candidate shouldn’t start yawning. Neither should you. We’ve had feedback from
candidates and interviewers as to the pain of the 1hr.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stick to your discipline.&lt;/strong&gt; How annoying is it as a candidate to be asked the
same question from all of the people you meet? What is this, a police
interrogation to see if your story lines up. No. It isn’t. Focus on your
discipline and target that area. Project managers in the interview, focus on
delivery, priorities. Design &amp;amp; Product, focus on what they think is important
for vision and competing priorities. Developer rounds, why are you asking what
motivates them? There is an Engineering Manager round, find out if they can
code!&lt;/p&gt;

&lt;p&gt;Also there is no overlap with interviewers outside of the scope of the point of
contact. The members shouldn’t cut across disciplines, no matter how talented
the individual is. The aim is to have a deep cross cut of disciplines and
exposure to the team.&lt;/p&gt;

&lt;p&gt;But don’t forget. You represent the company. You also are a salesmen and a
spokesperson for the company and the role itself. Do you think the candidate
wants to work with you after you give them a tree balancing algorithm of which
really, doesn’t have relevance to the role. This isn’t about you stroking your
own ego as an interviewer. Its about the what, why and how. Focus on that, not
how much better you can balance a tree.&lt;/p&gt;

&lt;p&gt;You can tell a lot about a candidate by their questions. Leave 1omins in each
slot to allow for questions. What do they ask? Is it generic? Is it role
specific? Start thinking what questions you wish the candidate has and what that
may mean. For example&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I really love reactive functional programming? What does your team think of that
development paradigm?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Translation: They’re in touch with their technical self. They’re eager for new
tooling. They want to try new things? They may be not a good fit if they expect
to use it? Question the meaning… of their questions. Are they all generic “What
do you like about working here?” Is it a worn and torn question and not
imaginative? Or do they want a quick summary of the awesomeness that you helped
create.&lt;/p&gt;

&lt;p&gt;So the steps above are for a developer. But really find the disciplines the
person will be rubbing up against, and throw targeted pairs at the candidate.
Get the interviewers to be at inner zen with what the teams needs are, and get
them honing in on these needs/traits like an alcoholic hearing last call.&lt;/p&gt;

&lt;h4 id=&quot;the-huddle-1234&quot;&gt;The huddle… 1…2…3…4&lt;/h4&gt;

&lt;p&gt;This is not American football. But rather the process in by which the team
decides if they’ve chosen a new member of their wolf pack. Traditionally a
hiring manager will take in all feedback from each phase, in isolation, and then
decide on how to proceed. It comes down to one brain to decide if the no hire
feedback from a pair, really should be discarded (yeah I heard red alert alarms
also).&lt;/p&gt;

&lt;p&gt;No! This is not how it should be done. The team should decide on how to proceed.
Basically it comes down to this. Does the team agree that it is a hire. Some
people may say no, some yes. So how do you decide? The team does. So how do we
achieve this? We throw up gang signs in the air. A one, two, three or a four.
What do they mean?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The candidate should have never come on site.&lt;/li&gt;
  &lt;li&gt;I really have some concerns here, but there were some positives, but really, I
  don’t think so. No hire.&lt;/li&gt;
  &lt;li&gt;I really liked the person. Sure they didn’t have all the experience or bombed on
  one part, but there is room to grow. I vote hire.&lt;/li&gt;
  &lt;li&gt;Wow! I should quit my job and they can be my replacement, because, that person
  really shouldn’t of been walking out of this office without having an offer in
  their hand and signature on the paper! Hire!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All at once we put our hands in the air and vote. We look around the room and
tally it up. If its unanimous, then its quick. Hire/no hire. But what if you get
the majority of 2’s and threes ⁷. We have a debate.&lt;/p&gt;

&lt;p&gt;Since it was divided up by discipline we talk it out as if it were strengths and
weaknesses. Does the team believe the strengths and weaknesses fall in line with
the what, who and how requirements of the team? If so. Hire.&lt;/p&gt;

&lt;p&gt;If the weaknesses are just, “nope” then no hire. Obviously. So how do you arrive
at that after 30mins of debate, tears and almost civil war in the office? Throw
up the gang signs once more and then leave it at that.&lt;/p&gt;

&lt;p&gt;Majority (and then some) 3’s? Hire :D
If not, sorry :(&lt;/p&gt;

&lt;h3 id=&quot;some-prince-of-persia-pitfalls&quot;&gt;Some prince of Persia pitfalls&lt;/h3&gt;

&lt;h4 id=&quot;respect-the-process-to-respect-the-team&quot;&gt;Respect the process to respect the team&lt;/h4&gt;

&lt;p&gt;Don’t start up the next day and revisit this issue. Sure you’re attached to the
individual. You put up a 4. But the team has spoken. If the team has understood
what they want, hit on that in the interviews, spoke as a collective and
collectively arrived at a decision, then respect that. By you or anyone else
trying to sway or revisit the decision you undermine the entire process and
faith in people’s voice. Don’t do it. It ain’t worth it.&lt;/p&gt;

&lt;h4 id=&quot;you-are-not-a-cia-operative-unless-youre-in-the-cia&quot;&gt;You are not a CIA operative. Unless you’re in the CIA&lt;/h4&gt;

&lt;p&gt;Interviewing by discipline really should alleviate this issue here. But if you
ask the same questions across discussions, don’t try see if the answers check
out between sessions. The person no doubt is not lying to you. They are just
recalibrating their tone.&lt;/p&gt;

&lt;p&gt;Guess what. Humans learn, its one of our redeeming features. We learn in an
interview if posed with the same question, whether or not we liked our own
answers, or the reactions or follow up questions you gave to us and you know
what? We’re going to change our answers if posed with the same challenging
question.&lt;/p&gt;

&lt;p&gt;You don’t have a badge, this isn’t detective work. Trust people and don’t try to
discover or uncover something that isn’t there. You don’t have the detective
background. Unless you’re from the CIA.&lt;/p&gt;

&lt;h4 id=&quot;no-hallway-chat&quot;&gt;No hallway chat&lt;/h4&gt;

&lt;p&gt;Bias really hurts the final voting round. If you come out of a session all
excited, or all upset because you wasted 45mins of your life, then keep it to
yourself. Too many times I have seen people in the “huddle” round say “At first
I was a 3, but then I spoke to x and I changed it to a 2”.&lt;/p&gt;

&lt;p&gt;No. You interviewed the candidate, you arrived at that number. The huddle is
designed to be an all encompassing discussion with multiple points of view from
various disciplines. Stand true to yours and you will be fair to the team.&lt;/p&gt;

&lt;h4 id=&quot;isolation-leads-to-devastation&quot;&gt;Isolation leads to devastation&lt;/h4&gt;

&lt;p&gt;If there is one parting bit of advice I can give to you, is that, don’t put this
candidate in a box. Don’t think of them as just the person sitting in front of
you. Always, I mean like seriously, print a large photo behind their head if you
need to, imagine this person on the team.&lt;/p&gt;

&lt;p&gt;You need to be in the mindset of what the team needs. By saying that you need to
visualize and pose questions, and interpret answers in how that may translate to
the team’s needs and operations. Don’t run into the trap of just targeting
technical skills if really your team needs high collaborative efforts.&lt;/p&gt;

&lt;p&gt;This person is going to be working on a team. Focus on how they will help this
team from the get go. Understand if they can work on the team by presenting
questions posed in this context. The individual’s influence falls outside (well
outside) of just delivery.&lt;/p&gt;

&lt;h4 id=&quot;identify-it-get-over-it&quot;&gt;Identify it. Get over it.&lt;/h4&gt;

&lt;p&gt;You ask a question. You get blown away by how awesome it was. Stop asking the
same question. Your job is to see if the individual aligns with the teams needs.
So if you can successfully identify a strength, good. Move on to find more
strengths outside of that trait. Start looking for weaknesses and areas of
growth. Feel free to pivot in this interview. Get the widest picture of the
person possible.&lt;/p&gt;

&lt;h4 id=&quot;setting-expectations&quot;&gt;Setting expectations&lt;/h4&gt;

&lt;p&gt;Something that I have found prove exceptionally beneficial is setting
expectations in an interview. Things like “I have seen this prove extremely
successful on the team in the past. Do you think you would be comfortable doing
the same going forward? Or do you have any ways you could improve on x?” See how
they respond. Because if the team has an expectation for a particular task to be
done, and the candidate isn’t comfortable and they’re sitting at the desk tears
welling up in their eyes wishing then never took the job, then guess what. Start
the process over again.&lt;/p&gt;

&lt;h4 id=&quot;be-real-to-the-candidate&quot;&gt;Be real to the candidate&lt;/h4&gt;

&lt;p&gt;Be honest as to the challenges or benefits the candidate will face if they come
on board. If you lost like 10 developers in the past month and velocity is
hurting then you know what. Tell them. As scary as it is to be honest. I would
rather have that than say no to potential candidates that didn’t see it as a
problem, only to lose a hired candidate due to asking “where are all the
developers? I quit”.&lt;/p&gt;

&lt;p&gt;Promote your team, the position and the awesomeness that can be as well. Are
there exciting opportunities on the team. Sell it to me! I want the dirt, I want
the icing. I want the full picture.&lt;/p&gt;

&lt;h3 id=&quot;any-red-flags&quot;&gt;Any red flags?&lt;/h3&gt;

&lt;p&gt;I had this one come up recently. A candidate asked me at the end in the question
section. Are there any red flags on my session today? Step 1 to this: Get over
yourself. Step 2: Give the feedback. Here’s how it went down:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt; Wow, you guys are really exciting, thank you so much for your
time, also thanks for the cupcake, is this from Dropbox? Oh, before I leave, I
want to know how I went today, any red flags?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;My Internal thought process:&lt;/strong&gt; Oh shit. Yeah. This person has put himself out
there. Yes they were great cupcakes. Wait what. Is he asking for direct
feedback, or are those cupcakes making him trip out? Whoa, he’s asking for
direct feedback! This person wants to grow as a person! &lt;em&gt;swallow&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;What I actually said:&lt;/strong&gt; Wow, you know what sure! So I really didn’t like how
you responded to my question around if you were comfortable presenting A/B test
results on a weekly basis. This is largely around because I said it was
extremely important to our team and the team loves it. It’s empowered them so
much and because of the insight the ownership of their tasks has increased
considerably. So yeah. That was a red flag. But really, I should have asked you
if you could also think of ways to provide alternate solutions to improve
ownership in the team.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The response to that from the candidate isn’t important. It did however turn
into a healthy discussion with mutual respect for each other. I dare you to try
that with your candidates and even with your team on a regular basis. Feedback
is critical. Someone that can demonstrate they thrive on feedback…. 4.&lt;/p&gt;

&lt;h3 id=&quot;but-research-shows&quot;&gt;But research shows&lt;/h3&gt;

&lt;p&gt;There has been some internal backlash as to how our team has been doing
interviews. It comes down to the study from somewhere I haven’t yet looked up,
that the result of hire/no hire is unchanged after 5 interviewers interact with
a candidate. I say sure. That is all well and good. But what 5 interviewers
doesn’t give is the sweet 16 effect.&lt;/p&gt;

&lt;p&gt;It doesn’t allow for the team to come together and make a decision that impacts
every single one of them. It is for this reason that myself and the team are
thriving on this highly hands on process. Is it working! Hell yeah it is! Are we
tweaking as it’s going. Yes!&lt;/p&gt;

&lt;h3 id=&quot;why-did-i-write-this&quot;&gt;Why did I write this?&lt;/h3&gt;

&lt;p&gt;I felt that I have a much deeper understanding on what makes a team due to the
absence of key team members. I’ve questioned what to do with the positions and
questioned others as to what they want. I have grown so much as an Engineering
Manager because of it. I’ve had exposure to the public and see amazing trends
and had to tweak the process considerably to hone in on the processes and filter
types in order to not waste my team’s time. I wrote this because I wanted to
share this and also to get insight into what you may take away from these
learnings and what you can give back. I wrote this because I had too much
coffee.&lt;/p&gt;

&lt;h4 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h4&gt;

&lt;p&gt;[1] Dropbox actually does/did that. Sounds delicious to me.&lt;br /&gt; [2] Ever seen
Muppets? I personally would love a muppet on my team. I will raise this with the
team if a position opens up.&lt;br /&gt; [3] Nyan cat is a strong hire&lt;br /&gt; [4] I’m
totally making this stuff up. I tend to ramble and this is one of the cases. I
also live very close to Palo Alto, but have no concrete evidence of this
happening. I am very sorry. I have been reading the Elon Musk book where he
crashed his McLaren F1 in Palo Alto. So maybe this is where I drew the
relationship.&lt;br /&gt; [5] I do not work for Dropbox, but I wish they would send me
some cupcakes after all the shoutouts I’ve been giving them.&lt;br /&gt; [6] I’m
actually joking in case you are thinking of interviewing. We are actually really
tidy and ensure you get a brand new keyboard, mouse and wiped down desk before
you start. Seriously. Who wants a second hand developer keyboard? …… rhetorical
people.&lt;br /&gt; [7] If you got all 1’s you really failed at the previous steps. Go
outside, rethink your life and the recruitment process. Call up Dropbox and
request some sympathy cupcakes ⁸&lt;br /&gt; [8] I should stop using them as a bad
attempt of making this recruitment post interesting ⁹&lt;br /&gt; [9] Can’t stop, won’t
stop&lt;/p&gt;
</description>
				
				<pubDate>Tue, 12 Sep 2017 00:00:00 -0700</pubDate>
				<link>http://manageering.us/2017/09/12/recruiting-is-hard/</link>
				<guid isPermaLink="true">http://manageering.us/2017/09/12/recruiting-is-hard/</guid>
			</item>
		
	</channel>
</rss>
